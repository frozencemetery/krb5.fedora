From b3c6667d7f98cf0347642c7927618fd40cd6f904 Mon Sep 17 00:00:00 2001
From: Robbie Harwood <rharwood@redhat.com>
Date: Tue, 23 Aug 2016 16:45:26 -0400
Subject: [PATCH] Install shared libraries as executable

RPM expects this behavior, and systems with contrary policies (like
Debian) address permissions at the packaging layer.  Most other build
systems appear to install shared libraries as executable.

[ghudson@mit.edu: edited commit message]

ticket: 8965 (new)
(cherry picked from commit 1bc5f76d2e7013b8771e3bd9960c82642ba0b467)
---
 src/config/shlib.conf | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/config/shlib.conf b/src/config/shlib.conf
index 3e4af6c02..75b7cc3af 100644
--- a/src/config/shlib.conf
+++ b/src/config/shlib.conf
@@ -22,8 +22,10 @@ SHLIBVEXT=.so.v-nobuild
 SHLIBSEXT=.so.s-nobuild
 # Most systems support profiled libraries.
 PFLIBEXT=_p.a
-# Most systems install shared libs as mode 644, etc. while hpux wants 755
-INSTALL_SHLIB='$(INSTALL_DATA)'
+# Install libraries executable.  Some systems (e.g., RPM-based ones) require
+# this for package dependency generation, while others are ambivalent or will
+# strip it during packaging.
+INSTALL_SHLIB='$(INSTALL)'
 # Most systems use the same objects for shared libraries and dynamically
 # loadable objects.
 DYNOBJEXT='$(SHLIBEXT)'
@@ -118,7 +120,6 @@ alpha*-dec-osf*)
 # -O +dpv should display any routines eliminated as unused, but -b
 #	  apparently turns that off
 *-*-hpux*)
-	INSTALL_SHLIB='$(INSTALL)'
 	case $host_cpu in
 	hppa*)
 		SHLIBEXT=.sl
